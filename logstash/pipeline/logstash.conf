input {
  beats {
    port => "5045"
    codec => "json"
    tags => ["nodejs"]
  }
  beats {
    port => "5044"
    tags => ["others"]
  }
}

## Add your filters / logstash plugins configuration here
filter {
    if "others" in [tags] {
      grok {
        match => {
          #"message" => '%{IPORHOST:remote_ip} - %{DATA:user_name} \[%{HTTPDATE:time}\] "%{WORD:request_action} %{DATA:request} HTTP/%{NUMBER:http_version}" %{NUMBER:response} %{NUMBER:bytes} "%{DATA:referrer}" "%{DATA:agent}"'
          "message" => '%{IPORHOST:remote_ip} - %{DATA:user_name} \[%{HTTPDATE:time}\] "%{WORD:request_action} %{DATA:request} HTTP/%{NUMBER:http_version}" %{NUMBER:response} %{NUMBER:bytes} "%{DATA:referrer}" "%{DATA:agent}" "%{DATA:request_body}" upstream_addr=%{URIHOST:upstream_addr} upstream_status=%{NUMBER:upstream_status} request_time=%{NUMBER:request_time} upstream_response_time=%{NUMBER:upstream_response_time}'
        }
      }

      date {
        match => [ "time", "dd/MMM/YYYY:HH:mm:ss Z" ]
        locale => en
      }

      geoip {
        source => "remote_ip"
        target => "geoip"
      }

      useragent {
        source => "agent"
        target => "user_agent"
      }
    }
}

output {
    if "nodejs" in [tags] {
    	elasticsearch {
            hosts => "elasticsearch:9200"
            index => "nodejslog-%{+YYYY.MM.dd}"
            document_type => "%{[@metadata][type]}"
          }
    }

    if "others" in [tags] {
        elasticsearch {
            hosts => "elasticsearch:9200"
            #template => "./nginx_template.json"
            #template_name => "nginx_elastic_stack_example"
            #template_overwrite => true
            index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
            document_type => "%{[@metadata][type]}"
          }
    }
}